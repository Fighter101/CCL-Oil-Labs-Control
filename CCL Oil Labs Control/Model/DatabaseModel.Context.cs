//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCL_Oil_Labs_Control.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.IO;
    using System.Linq;

    public partial class DatabaseEntities : DbContext
    {
        
        private static DatabaseEntities context = null;
        public static DatabaseEntities Initiate()
        {
            var path = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
            path = Path.Combine(path, "CCL Labs");
            AppDomain.CurrentDomain.SetData("DataDirectory", path);
            Directory.CreateDirectory(path);
            var files = Directory.GetFiles(path).ToList();
            if (files.FindAll(e => e.Contains("Database")).Count < 2)
            {
                File.Copy("Database.mdf", Path.Combine(path, "Database.mdf"));
                File.Copy("Database_log.ldf", Path.Combine(path, "Database_log.ldf"));
            }
            if (context == null)
                context = new DatabaseEntities();
            return context;
        }
        private DatabaseEntities()
            : base("name=DatabaseEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
            context = null;
            //context.Turbines.Load();
            //context.Turbines.Local;
        }
        public virtual DbSet<Analysis> Analyses { get; set; }
        public virtual DbSet<AnalysisType> AnalysisTypes { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<CompanyType> CompanyTypes { get; set; }
        public virtual DbSet<Furan> Furans { get; set; }
        public virtual DbSet<Gas> Gases { get; set; }
        public virtual DbSet<Lab> Labs { get; set; }
        public virtual DbSet<Oil> Oils { get; set; }
        public virtual DbSet<OilType> OilTypes { get; set; }
        public virtual DbSet<Record> Records { get; set; }
        public virtual DbSet<Station> Stations { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Transformer> Transformers { get; set; }
        public virtual DbSet<Turbine> Turbines { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<OilAnalysisType> OilAnalysisTypes { get; set; }
    }
}
